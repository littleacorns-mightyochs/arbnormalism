version: "3.9"

networks:
  pangolin:
    name: pangolin
    driver: bridge

volumes:
  pangolin-data: {}
  pgdata: {}
  gerbil-config: {}
  traefik-lets: {}

services:
  # ---------------------------
  # Postgres for Pangolin (local)
  # You can swap to a managed Postgres later; just update config/config.yml.
  # ---------------------------
  pangolin-db:
    image: ${POSTGRES_IMAGE}
    container_name: pangolin-db
    restart: unless-stopped
    networks: [pangolin]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  # ---------------------------
  # Pangolin (PostgreSQL-enabled image)
  # ---------------------------
  pangolin:
    image: ${PANGOLIN_IMAGE}
    container_name: pangolin
    restart: unless-stopped
    depends_on:
      - pangolin-db
    networks: [pangolin]
    # Do NOT expose ports here. Traefik fronts Pangolin on 443.
    environment:
      # Let the config file reference SERVER_SECRET via env (safer than hardcoding).
      SERVER_SECRET: ${SERVER_SECRET}
    volumes:
      - ./config:/app/config
      - pangolin-data:/var/certificates
      - pangolin-data:/var/dynamic
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3001/api/v1/healthz"]
      interval: 5s
      timeout: 3s
      retries: 20

  # ---------------------------
  # Gerbil (WireGuard controller)
  # Traefik will share this network namespace; 80/443 bind here.
  # ---------------------------
  gerbil:
    image: ${GERBIL_IMAGE}
    container_name: gerbil
    restart: unless-stopped
    depends_on:
      pangolin:
        condition: service_healthy
    networks: [pangolin]
    command:
      - --config=/var/config/gerbil.json
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - gerbil-config:/var/config
    ports:
      # UDP WireGuard (open these in firewall / security group)
      - "${WG_UDP1}:51820/udp"
      - "${WG_UDP2}:21820/udp"
      # Traefik will run with network_mode: service:gerbil, so bind 80/443 here:
      - "80:80/tcp"
      - "443:443/tcp"

  # ---------------------------
  # Traefik (HTTPS + Badger plugin)
  # Shares netns with Gerbil so ports appear on Gerbil.
  # ---------------------------
  traefik:
    image: ${TRAEFIK_IMAGE}
    container_name: traefik
    restart: unless-stopped
    network_mode: "service:gerbil"
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --configFile=/etc/traefik/traefik_config.yml
    volumes:
      - ./config/traefik:/etc/traefik:ro
      - ./config/letsencrypt:/letsencrypt
      - pangolin-data:/var/certificates:ro
      - pangolin-data:/var/dynamic:ro
