version: "3.8"
volumes:
  db_data:
  n8n:
  redis_data:
  supabase_db_data:
  supabase_storage_data:
  wordpress_data:
x-shared: &shared
  restart: always
  image: n8nio/n8n:${SOFTWARE_VERSION_TAG}
  environment:
    DB_TYPE: postgresdb
    DB_POSTGRESDB_HOST: db
    DB_POSTGRESDB_PORT: 5432
    DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
    DB_POSTGRESDB_USER: ${POSTGRES_USER}
    DB_POSTGRESDB_PASSWORD: ${SOFTWARE_PASSWORD}
    EXECUTIONS_MODE: queue
    QUEUE_BULL_REDIS_HOST: cache
    QUEUE_HEALTH_CHECK_ACTIVE: "true"
    WEBHOOK_TUNNEL_URL: https://${DOMAIN}
    WEBHOOK_URL: https://${DOMAIN}
    N8N_BASIC_AUTH_ACTIVE: "true"
    N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
    N8N_BASIC_AUTH_PASSWORD: ${SOFTWARE_PASSWORD}
    N8N_HOST: ${DOMAIN}
    N8N_EMAIL_MODE: "smtp"
    N8N_SMTP_HOST: ${SMTP_HOST}
    N8N_SMTP_PORT: ${SMTP_PORT}
    N8N_SMTP_USER: " "
    N8N_SMTP_PASS: " "
    N8N_SMTP_SENDER: ${SMTP_FROM_EMAIL}
    N8N_SMTP_SSL: "false"
    NODE_TLS_REJECT_UNAUTHORIZED: 0
    EXECUTIONS_DATA_PRUNE: ${EXECUTIONS_DATA_PRUNE}
    EXECUTIONS_DATA_MAX_AGE: ${EXECUTIONS_DATA_MAX_AGE}
    EXECUTIONS_DATA_PRUNE_MAX_COUNT: ${EXECUTIONS_DATA_PRUNE_MAX_COUNT} # <--- Added!
    N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
    N8N_DEFAULT_BINARY_DATA_MODE: filesystem
    N8N_PAYLOAD_SIZE_MAX: 32
    ADMIN_EMAIL: ${ADMIN_EMAIL} # <--- Added (if needed by workflows)
  extra_hosts:
    - "${DOMAIN}:${IP}"
  links:
    - db
    - cache
  volumes:
    - ./n8n:/home/node/.n8n
  depends_on:
    cache:
      condition: service_healthy
    db:
      condition: service_healthy
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${SOFTWARE_PASSWORD}
    extra_hosts:
      - "${DOMAIN}:${IP}"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
  cache:
    image: redis:latest
    restart: always   
    command: ["redis-server", "--save", "60 1", "--stop-writes-on-bgsave-error", "no"]
    volumes:
      - ./redis_data:/data
    extra_hosts:
      - "${DOMAIN}:${IP}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
  n8n:
    <<: *shared
    dns:
      - 8.8.8.8    
    ports:
      - "5678:5678"
    extra_hosts:
      - "${DOMAIN}:${IP}"
  n8n-worker:
    <<: *shared
    command: worker
    extra_hosts:
      - "${DOMAIN}:${IP}"
    depends_on:
      - n8n

  # Supabase (minimal setup)
  supabase-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: supabase
      POSTGRES_USER: supabase
      POSTGRES_PASSWORD: supabase
    volumes:
      - ./supabase_db_data:/var/lib/postgresql/data

  supabase-storage:
    image: supabase/storage-api:v0.37.0
    restart: always
    depends_on:
      - supabase-db
    environment:
      POSTGRES_PASSWORD: supabase
      DB_HOST: supabase-db
      DB_USER: supabase
      DB_NAME: supabase
      DB_PORT: 5432
    volumes:
      - ./supabase_storage_data:/var/lib/storage

  supabase-rest:
    image: postgrest/postgrest:v10.1.1
    restart: always
    depends_on:
      - supabase-db
    environment:
      PGRST_DB_URI: postgres://supabase:supabase@supabase-db:5432/supabase
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_SCHEMA: public

  wordpress:
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: wp-db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    ports:
      - "8081:80"
    depends_on:
      - wp-db
    volumes:
      - ./wordpress_data:/var/www/html

  wp-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - ./wordpress_data:/var/lib/mysql
